<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAA9
        FwAAPRcBFDISQAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAjvSURBVHhe7d1N
        q51XFcDxDh32IzgSRZAME0f9ABmkHYnfwokfRhEcOrFt+kp8B8U2ad5zTRs1NoVgaUFxIogox7sHhecc
        dr33PGuznpXs3+A32Zx9WHed5/zJ4EBe2O12z5SvX7z85NRuC1996aWv9GaijvYZ9T67JE96M1XWPays
        Lflg6WkEoD4BOE73sLK25IOlpxGA+gTgON3DytqSD5aeRgDqE4DjdA8ra0s+WHoaAahPAI7TPaysLflg
        6WkEoD4BOE73sLK25IOlpxGA+gTgON3DytqSD5aeRgDqE4DjdA8ra0s+WHoaAahPAI7TPaysLflg6WkE
        oD4BOE73sLK25IOlpxGA+gTgON3DytqSD5aeRgDqE4DjdA8ra0s+WHoaAahPAI7TPaysLflg6WkEoD4B
        OE73sLK25IOlpxGA+gTgON3DytqSD5aeRgDqE4DjdA8ra0s+WHoaAahPAI7TPVz6z6VXXjz1nSq+cfHy
        J53Fp/js21e+25uJOtpn1PvsMrRnszfThl7sfaeXuodLp29y4dSuim9evPy0t/wM/7z08r96M1FH+4x6
        n12G9mz2ZtrQhd53eql7uNTe5OBNNyUA/D8CsEcARhKA+gRgjwCMJAD1CcAeARhJAOoTgD0CMJIA1CcA
        ewRgJAGoTwD2CMBIAlCfAOwRgJEEoD4B2CMAIwlAfQKwRwBGEoD6BGCPAIwkAPUJwB4BGEkA6hOAPQIw
        kgDUJwB7BGAkAahPAPYIwEgCUJ8A7BGAkQSgPgHY8/wF4K2LV2795NKV61v496VX/tubiTraZ9T77DK0
        Z7M304aevwAA5yYAMDEBgIkJAExMAGBiAgATEwCYmADAxAQAJiYAMDEBgIkJAExMAGBiAgATEwCYmADA
        xAQAJiYAMDEBgIkJAExMAGBiAgATEwCYmADAxAQAJiYAMDEBgIkJAExMAGBiAgATiwfgH9d/862/P7l/
        Ajxb2ne3951e6h4u/e3zP144tQOeOfF/AbQ3OXhT4NkgADAxAYCJCQBMTABgYgIAExMAmJgAwMQEACYm
        ADAxAYCJCQBMTABgYgIAExMAmJgAwMQEACYmADAxAYCJCQBMTABgYgIAExMAmJgAwMQEACYmADAxAYCJ
        CQBMTABgYs9fAE7uvru7d/MNKKc9m71ndkPPXwDu33pzd/v6q1BOezZ7z+yGBACyCEACAaAqAUggAFQl
        AAkEgKoEIIEAUJUAJBAAqhKABOcJwN0Prm7k9e48e2681rmX486Ns+drr+ndzdB205tpqe24dzdDb54l
        AUhwVgDunD5EvXsZPvvrSXempY8e/KJ7N8OTx+93Z1pqr+ndzdB205tpqe24dzdDe7Z6M31BABIIwHoC
        ECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAF
        CMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoC
        ECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAF
        CMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFnCcAnz69v4mnT251
        Z1p6eO9a926Gx49+251pqb2mdzdD201vpqW2497dDAJQwFkBgK0IQAIBoCoBSCAAVCUACQSAqgQggQBQ
        lQAkEACqEoAEAkBVApBAAKhKABKcJwCPTn65iQ8f/Lw7z9K9m29272Y4uftud6alqzev7n74wTZ+feP1
        7kxLbce9vy1Db54lAUhwVgD8FPjLneenwN9776e7r137wSZ+fBqB3kxLfgp8FAHIJAAxAjCcAGQSgBgB
        GE4AMglAjAAMJwCZBCBGAIYTgEwCECMAwwlAJgGIEYDhBCCTAMQIwHACkEkAYgRgOAHIJAAxAjCcAGQS
        gBgBGE4AMglAjAAMJwCZBCBGAIYTgEwCECMAwwlAJgGIEYDhBCCTAMQIwHACkEkAYgRgOAHIJAAxAjCc
        AGQSgBgBGE4AMglAjAAMJwCZBCBGAIYTgEwCECMAwwlAJgGIEYDhBCCTAMQIwHACkEkAYgRgOAHIJAAx
        AjCcAGQSgBgBGE4AMglAjAAMJwCZBCBGAIYTgEwCECMAw80XgNunH9LHf35vE48f/a4/08KDO+9072b4
        6Bz/xfWPTr+E33//1U28fY4AtB33/rYM7dnqzfQFAUhwZgBgIwKQQACoSgASCABVCUACAaAqAUggAFQl
        AAkEgKoEIIEAUJUAJBAAqhKABGcG4MZru0/+cn0TH//p9/2ZFk7uvNO9m+HRH37VnWmpvaZ3N0PbTW+m
        pbbj3t0MfghUwFkB8FPgL3eenwK31/TuZmi76c205KfARxGATAIQIwDDCUAmAYgRgOEEIJMAxAjAcAKQ
        SQBiBGA4AcgkADECMJwAZBKAGAEYTgAyCUCMAAwnAJkEIEYAhhOATAIQIwDDCUAmAYgRgOEEIJMAxAjA
        cAKQSQBiBGA4AcgkADECMJwAZBKAGAEYTgAyCUCMAAwnAJkEIEYAhhOATAIQIwDDCUAmAYgRgOEEIJMA
        xAjAcAKQSQBiBGA4AcgkADECMJwAZBKAGAEYTgAyCUCMAAwnAJkEIEYAhhOATAIQIwDDCUAmAYgRgOEE
        IJMAxAjAcAKQSQBiBGA4AcgkADECMNx8AWg+vP+zTTy8d607z9K9m29072Z4cPvt7kxL7TW9uxnabnoz
        LbUd9+5m6M2zJAAJzhMA2IIAJBAAqhKABAJAVQKQQACoSgASCABVCUACAaAqAUggAFQlAAkEgKoEIMHn
        nz6EsnrP7IaevwAA5yYAMDEBgIkJAExMAGBiAgATEwCYmADAxAQAJiYAMDEBgIkJAExMAGBiAgATEwCY
        mADAxAQAJiYAMDEBgIkJAExMAGBiAgATEwCYmADAxAQAJiYAMDEBgIkJAExMAGBiAgATOyMAuxf+B4Zq
        jb+YruGdAAAAAElFTkSuQmCC
</value>
  </data>
</root>