<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAPRcAAD0XARQyEkAAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAI70lEQVR4Xu3dTaudVxXA8Q4d9iM4EkWQDBNH/QAZpB2J38KJH0YRHDqxbfpKfAfFNmnec00bNTaF
        YGlBcSKIKMe7B4XnHHa99zxrs56V7N/gN9mcfVh3nef8yeBAXtjtds+Ur1+8/OTUbgtffemlr/Rmoo72
        GfU+uyRPejNV1j2srC35YOlpBKA+AThO97CytuSDpacRgPoE4Djdw8rakg+WnkYA6hOA43QPK2tLPlh6
        GgGoTwCO0z2srC35YOlpBKA+AThO97CytuSDpacRgPoE4Djdw8rakg+WnkYA6hOA43QPK2tLPlh6GgGo
        TwCO0z2srC35YOlpBKA+AThO97CytuSDpacRgPoE4Djdw8rakg+WnkYA6hOA43QPK2tLPlh6GgGoTwCO
        0z2srC35YOlpBKA+AThO97CytuSDpacRgPoE4Djdw8rakg+WnkYA6hOA43QPK2tLPlh6GgGoTwCO0z1c
        +s+lV1489Z0qvnHx8iedxaf47NtXvtubiTraZ9T77DK0Z7M304Ze7H2nl7qHS6dvcuHUropvXrz8tLf8
        DP+89PK/ejNRR/uMep9dhvZs9mba0IXed3qpe7jU3uTgTTclAPw/ArBHAEYSgPoEYI8AjCQA9QnAHgEY
        SQDqE4A9AjCSANQnAHsEYCQBqE8A9gjASAJQnwDsEYCRBKA+AdgjACMJQH0CsEcARhKA+gRgjwCMJAD1
        CcAeARhJAOoTgD0CMJIA1CcAewRgJAGoTwD2CMBIAlCfAOwRgJEEoD4B2PP8BeCti1du/eTSletb+Pel
        V/7bm4k62mfU++wytGezN9OGnr8AAOcmADAxAYCJCQBMTABgYgIAExMAmJgAwMQEACYmADAxAYCJCQBM
        TABgYgIAExMAmJgAwMQEACYmADAxAYCJCQBMTABgYgIAExMAmJgAwMQEACYmADAxAYCJCQBMTABgYgIA
        E4sH4B/Xf/Otvz+5fwI8W9p3t/edXuoeLv3t8z9eOLUDnjnxfwG0Nzl4U+DZIAAwMQGAiQkATEwAYGIC
        ABMTAJiYAMDEBAAmJgAwMQGAiQkATEwAYGICABMTAJiYAMDEBAAmJgAwMQGAiQkATEwAYGICABMTAJiY
        AMDEBAAmJgAwMQGAiQkATEwAYGLPXwBO7r67u3fzDSinPZu9Z3ZDz18A7t96c3f7+qtQTns2e8/shgQA
        sghAAgGgKgFIIABUJQAJBICqBCCBAFCVACQQAKoSgATnCcDdD65u5PXuPHtuvNa5l+POjbPna6/p3c3Q
        dtObaantuHc3Q2+eJQFIcFYA7pw+RL17GT7760l3pqWPHvyiezfDk8fvd2daaq/p3c3QdtObaantuHc3
        Q3u2ejN9QQASCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6
        AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMA
        BQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6
        AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMABQjAegIQIwAFCMB6AhAjAAUIwHoCECMA
        BZwnAJ8+vb+Jp09udWdaenjvWvduhsePftudaam9pnc3Q9tNb6altuPe3QwCUMBZAYCtCEACAaAqAUgg
        AFQlAAkEgKoEIIEAUJUAJBAAqhKABAJAVQKQQACoSgASnCcAj05+uYkPH/y8O8/SvZtvdu9mOLn7bnem
        pas3r+5++ME2fn3j9e5MS23Hvb8tQ2+eJQFIcFYA/BT4y53np8Dfe++nu69d+8Emfnwagd5MS34KfBQB
        yCQAMQIwnABkEoAYARhOADIJQIwADCcAmQQgRgCGE4BMAhAjAMMJQCYBiBGA4QQgkwDECMBwApBJAGIE
        YDgByCQAMQIwnABkEoAYARhOADIJQIwADCcAmQQgRgCGE4BMAhAjAMMJQCYBiBGA4QQgkwDECMBwApBJ
        AGIEYDgByCQAMQIwnABkEoAYARhOADIJQIwADCcAmQQgRgCGE4BMAhAjAMMJQCYBiBGA4QQgkwDECMBw
        ApBJAGIEYDgByCQAMQIwnABkEoAYARhOADIJQIwADCcAmQQgRgCGE4BMAhAjAMPNF4Dbpx/Sx39+bxOP
        H/2uP9PCgzvvdO9m+Ogc/8X1j06/hN9//9VNvH2OALQd9/62DO3Z6s30BQFIcGYAYCMCkEAAqEoAEggA
        VQlAAgGgKgFIIABUJQAJBICqBCCBAFCVACQQAKoSgARnBuDGa7tP/nJ9Ex//6ff9mRZO7rzTvZvh0R9+
        1Z1pqb2mdzdD201vpqW2497dDH4IVMBZAfBT4C93np8Ct9f07mZou+nNtOSnwEcRgEwCECMAwwlAJgGI
        EYDhBCCTAMQIwHACkEkAYgRgOAHIJAAxAjCcAGQSgBgBGE4AMglAjAAMJwCZBCBGAIYTgEwCECMAwwlA
        JgGIEYDhBCCTAMQIwHACkEkAYgRgOAHIJAAxAjCcAGQSgBgBGE4AMglAjAAMJwCZBCBGAIYTgEwCECMA
        wwlAJgGIEYDhBCCTAMQIwHACkEkAYgRgOAHIJAAxAjCcAGQSgBgBGE4AMglAjAAMJwCZBCBGAIYTgEwC
        ECMAwwlAJgGIEYDhBCCTAMQIwHACkEkAYgRgOAHIJAAxAjDcfAFoPrz/s008vHetO8/SvZtvdO9meHD7
        7e5MS+01vbsZ2m56My21HffuZujNsyQACc4TANiCACQQAKoSgAQCQFUCkEAAqEoAEggAVQlAAgGgKgFI
        IABUJQAJBICqBCDB558+hLJ6z+yGnr8AAOcmADAxAYCJCQBMTABgYgIAExMAmJgAwMQEACYmADAxAYCJ
        CQBMTABgYgIAExMAmJgAwMQEACYmADAxAYCJCQBMTABgYgIAExMAmJgAwMQEACYmADAxAYCJCQBMTABg
        YgIAEzsjALsX/geGao2/mK7hnQAAAABJRU5ErkJggg==
</value>
  </data>
</root>