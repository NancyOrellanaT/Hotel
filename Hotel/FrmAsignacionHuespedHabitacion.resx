<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <metadata name="ID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>